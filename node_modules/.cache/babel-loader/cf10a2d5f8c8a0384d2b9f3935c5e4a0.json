{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\Udemy Course\\\\expensesApp\\\\src\\\\components\\\\Chart\\\\ChartBar.js\";\nimport './ChartBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartBar(props) {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round(props.value / props.maxValue * 100);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: {\n          height: barFillHeight\n        } // dynamic Css styling. First curly brace because passing dynamic data. Second curly brace because passing Object.\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: [\" \", props.label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ChartBar;\nexport default ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"sources":["D:/ReactJS/Udemy Course/expensesApp/src/components/Chart/ChartBar.js"],"names":["ChartBar","props","barFillHeight","maxValue","Math","round","value","height","label"],"mappings":";AACA,OAAO,gBAAP;;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIC,aAAa,GAAG,IAApB;;AAEA,MAAID,KAAK,CAACE,QAAN,GAAiB,CAArB,EAAwB;AACpBD,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAaJ,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACE,QAArB,GAAiC,GAA7C,CAAhB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAG,kBAAjB;AAAA,6BAEI;AACI,QAAA,SAAS,EAAG,iBADhB;AAEI,QAAA,KAAK,EAAI;AAAEI,UAAAA,MAAM,EAAGL;AAAX,SAFb,CAE0C;;AAF1C;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI;AAAK,MAAA,SAAS,EAAG,kBAAjB;AAAA,sBAAuCD,KAAK,CAACO,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;KAvBQR,Q;AAyBT,eAAeA,QAAf","sourcesContent":["\r\nimport './ChartBar.css';\r\n\r\nfunction ChartBar(props) {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round( (props.value / props.maxValue) * 100);\r\n    }\r\n\r\n    return (\r\n        <div className = \"chart-bar\">\r\n\r\n            <div className = \"chart-bar__inner\"> \r\n\r\n                <div \r\n                    className = \"chart-bar__fill\"\r\n                    style = {{ height : barFillHeight }}  // dynamic Css styling. First curly brace because passing dynamic data. Second curly brace because passing Object.\r\n                    ></div>\r\n\r\n            </div>\r\n\r\n            <div className = \"chart-bar__label\"> { props.label } </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;"]},"metadata":{},"sourceType":"module"}