{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\Udemy Course\\\\expensesApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummy_expenses = [{\n  id: \"e1\",\n  title: \"Car Insurance\",\n  amount: 200,\n  date: new Date(2021, 1, 10)\n}, // the month is 0-indexed\n{\n  id: \"e2\",\n  title: \"New TV\",\n  amount: 400,\n  date: new Date(2022, 2, 29)\n}, {\n  id: \"e3\",\n  title: \"Health Insurance\",\n  amount: 1000,\n  date: new Date(2019, 11, 28)\n}, {\n  id: \"e4\",\n  title: \"College Fees\",\n  amount: 900,\n  date: new Date(2020, 11, 27)\n}, {\n  id: \"e5\",\n  title: \"Vacation\",\n  amount: 5000,\n  date: new Date(2021, 10, 9)\n}];\n\nfunction App() {\n  _s();\n\n  const [expenses, setExpenses] = useState(dummy_expenses);\n\n  function addExpenseHandler(expense) {\n    // \"expense\" data coming from NewExpense.js component \n    // setExpenses([expense, ...expenses])  //this just appends the new expense, and makes no use of the previous state\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]; // updating depending on the previous snapshot of state. Passing a function as an argument to the state updating function, and the function automatically receives the latest state snapshot\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \"     \", /*#__PURE__*/_jsxDEV(Expenses, {\n      item: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LvX5lLybzwCCBefjRZ+WMypoPvc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ReactJS/Udemy Course/expensesApp/src/App.js"],"names":["React","useState","Expenses","NewExpense","dummy_expenses","id","title","amount","date","Date","App","expenses","setExpenses","addExpenseHandler","expense","prevExpenses"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAG,eAApB;AAAqCC,EAAAA,MAAM,EAAG,GAA9C;AAAmDC,EAAAA,IAAI,EAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAA1D,CADqB,EAC8D;AACnF;AAAEJ,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAG,QAApB;AAA8BC,EAAAA,MAAM,EAAG,GAAvC;AAA4CC,EAAAA,IAAI,EAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAAnD,CAFqB,EAGrB;AAAEJ,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAG,kBAApB;AAAwCC,EAAAA,MAAM,EAAG,IAAjD;AAAuDC,EAAAA,IAAI,EAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB;AAA9D,CAHqB,EAIrB;AAAEJ,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAG,cAApB;AAAoCC,EAAAA,MAAM,EAAG,GAA7C;AAAkDC,EAAAA,IAAI,EAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB;AAAzD,CAJqB,EAKrB;AAAEJ,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAG,UAApB;AAAgCC,EAAAA,MAAM,EAAG,IAAzC;AAA+CC,EAAAA,IAAI,EAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,CAAnB;AAAtD,CALqB,CAAvB;;AASA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BX,QAAQ,CAACG,cAAD,CAAzC;;AAEA,WAASS,iBAAT,CAA2BC,OAA3B,EAAoC;AAAK;AACvC;AACAF,IAAAA,WAAW,CAAEG,YAAD,IAAkB;AAC5B,aAAO,CAACD,OAAD,EAAU,GAAGC,YAAb,CAAP,CAD4B,CACU;AAEvC,KAHU,CAAX;AAKD;;AAAA;AAGD,sBACE;AAAA,4BAEE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAKF;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF,wBAGE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAIF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtBQD,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst dummy_expenses = [\n  { id: \"e1\", title : \"Car Insurance\", amount : 200, date : new Date(2021, 1, 10) }, // the month is 0-indexed\n  { id: \"e2\", title : \"New TV\", amount : 400, date : new Date(2022, 2, 29) },\n  { id: \"e3\", title : \"Health Insurance\", amount : 1000, date : new Date(2019, 11, 28) },\n  { id: \"e4\", title : \"College Fees\", amount : 900, date : new Date(2020, 11, 27) },\n  { id: \"e5\", title : \"Vacation\", amount : 5000, date : new Date(2021, 10, 9) }\n];\n\n\nfunction App() {\n\n  const [expenses , setExpenses] = useState(dummy_expenses);\n\n  function addExpenseHandler(expense) {    // \"expense\" data coming from NewExpense.js component \n    // setExpenses([expense, ...expenses])  //this just appends the new expense, and makes no use of the previous state\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];    // updating depending on the previous snapshot of state. Passing a function as an argument to the state updating function, and the function automatically receives the latest state snapshot\n\n    });\n  \n  };\n\n\n  return (\n    <div>\n      \n      <NewExpense onAddExpense = { addExpenseHandler } />     {/* data from NewExpense.js */}\n      <Expenses item = {expenses} />\n        \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}