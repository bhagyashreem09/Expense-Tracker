{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\Udemy Course\\\\expensesApp\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport './Expenses.css';\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2019');\n\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n  }\n\n  const filteredExpenses = props.item.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear; // compares true or false if the date from array matches the \"filteredYear\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), filteredExpenses.lenght === 0 ?\n      /*#__PURE__*/\n      // if ?  \n      _jsxDEV(\"h1\", {\n        children: \"No Expenses in this year.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this) : // else :\n      filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        // always add key when mapping lists/arrays\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Expenses, \"EGzgx3ZGu1NQw0wtXW2UThPu2C0=\");\n\n_c = Expenses;\n;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["D:/ReactJS/Udemy Course/expensesApp/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","item","filter","expense","date","getFullYear","toString","lenght","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,WAASQ,mBAAT,CAA6BC,YAA7B,EAA2C;AACzCF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD;;AAED,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAkBC,OAAO,IAAI;AACpD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD,CADoD,CACW;AAChE,GAFwB,CAAzB;AAII,sBAEE;AAAA,2BAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAG,UAAlB;AAAA,8BAEA,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEA,YAA1B;AAAwC,QAAA,cAAc,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFA,EAMCE,gBAAgB,CAACO,MAAjB,KAA4B,CAA5B;AAAA;AAAuC;AACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAEuC;AACpCP,MAAAA,gBAAgB,CAACQ,GAAjB,CAAuBL,OAAD,iBACpB,QAAC,WAAD;AACyB;AACvB,QAAA,KAAK,EAAEA,OAAO,CAACM,KAFjB;AAGE,QAAA,MAAM,EAAIN,OAAO,CAACO,MAHpB;AAIE,QAAA,IAAI,EAAIP,OAAO,CAACC;AAJlB,SACOD,OAAO,CAACQ,EADf;AAAA;AAAA;AAAA;AAAA,cADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AA2BL;;GAtCQjB,Q;;KAAAA,Q;AAsCR;AAED,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport './Expenses.css';\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2019');\r\n\r\n  function filterChangeHandler(selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.item.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear; // compares true or false if the date from array matches the \"filteredYear\"\r\n  });\r\n\r\n      return (\r\n\r\n        <div>\r\n\r\n          <Card className = \"expenses\">\r\n\r\n          <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n\r\n          {/* Ternary expression which works like conditional statements */}\r\n\r\n          {filteredExpenses.lenght === 0 ? (      // if ?  \r\n              <h1>No Expenses in this year.</h1>\r\n            ) : (                                 // else :\r\n              filteredExpenses.map( (expense) => (\r\n                <ExpenseItem \r\n                  key={expense.id}       // always add key when mapping lists/arrays\r\n                  title={expense.title} \r\n                  amount = {expense.amount} \r\n                  date = {expense.date} \r\n                /> \r\n              ))\r\n            )}\r\n\r\n          </Card>\r\n\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}